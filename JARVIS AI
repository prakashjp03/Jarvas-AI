import speech_recognition as sr
import os
import pyttsx3
import webbrowser
import datetime
import openai
from config import apikey
import random
import numpy as np

chatStr=""
def chat(query):
    global chatStr
    openai.api_key = apikey
    chatStr += f"jayaprakash:{query}\n Jarvis:"

    response = openai.Completion.create(
        model="text-davinci-003",
        prompt=chatStr,
        temperature=0.7,
        max_tokens=256,
        top_p=1,
        frequency_penalty=0,
        presence_penalty=0
    )
    speak(response["choices"][0]["text"])
    chatStr += f"{ response['choices'][0]['text']}\n"
    return response["choices"][0]["text"]

def ai(prompt):
    openai.api_key = apikey
    text=f"open ai response for prompt:{prompt} \n **************\n\n"

    response = openai.Completion.create(
        model="text-davinci-003",
        prompt=prompt,
        temperature=0.7,
        max_tokens=256,
        top_p=1,
        frequency_penalty=0,
        presence_penalty=0
    )
    #print(response["choices"][0]["content"])
    text += response["choices"][0]["text"]
    if not os.path.exists("openai"):
        os.mkdir("openai")
    with open(f"openai/{''.join(prompt.split('intelligence')[1:]).strip() }.txt","w" ) as f:
        f.write(text)
def speak(text):
    engine=pyttsx3.init()
    engine.say(text)
    engine.runAndWait()
def takeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        r.pause_threshold = 0.5
        audio = r.listen(source)
        try:

            query = r.recognize_google(audio,language="en-in")
            print(f"User said:{query}")
            return query
        except Exception as e:
            return 'Some Error occured. Sorry from jarvis'
speak("hello i am jarvis AI")
while True:
 print("Listening...")
 query=takeCommand()
 # todo: add more sites
 sites=[["youtube","https://www.youtube.com"],["wikipedia","https://www.wikipedia.com"],["google","https://www.google.com"]]
 for site in sites:
  if f"Open {site[0]}".lower() in query.lower():
     speak(f"opening {site[0]} sir , as you asked me for...")
     webbrowser.open(site[1])
  #todo: add a feature to play a specific song
  if "open music" in query:
     speak("0pening lokiverse")
     musicPath="C:/Users/Jayaprakash/Downloads/Lokiverse-2.0(PaglaSongs).mp3"
     os.startfile(musicPath)
  elif "the time" in query:
     strfTime= datetime.datetime.now().strftime("%H:%M:%S")
     speak(f"sir the time is {strfTime}")
  elif "open chrome" in query.lower():
     os.startfile(f"open C:/Program Files (x86)/Google/Chrome/Application")


  elif "using artificial intelligence".lower() in query.lower():
     ai(prompt=query)

  elif"jarvis quit".lower() in query.lower():
     exit()

  elif"delete chat".lower() in query.lower():
    chatStr=""

  else:
       print("Chatting...")
       chat(query)












